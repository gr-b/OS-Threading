#!/usr/bin/python

import subprocess

# 5 configurations for input files of different sizes
 # Standard I/O for reads of 1, 1k, 4k, 8k
  #                             1024, 4096, 8192
 # Memory mapped for reads of 1, 1k, 4k, 8k
 # Do each of these on several file sizes:
 # Bytes: 100, 1.000, 10.000, 100.000

files = ["smallfile","mediumfile","bigfile","reallybigfile","extremelybigfile","reallyextremelybigfile"]
read_sizes = [1, 1024, 4096, 8192]

print "Reading chunks:"
for file in files:
	for size in read_sizes:
		
		cmd = './doit ./proj4 testfiles/' + file + ' z ' + str(size) + ' -s'
		cmds = cmd.split()
		process = subprocess.Popen(cmds, stdout=subprocess.PIPE)

		for line in process.stdout:
			stuff = line.split()
			print "No MMap | File size:" + stuff[0] + " | Read size: " + str(size) + " | Completion time:" + stuff[1] + "                    " + cmd

print "\nMMap, unthreaded:"

for file in files:
	cmd = './doit ./proj4 testfiles/' + file + ' z -s'
	cmds = cmd.split()
	process = subprocess.Popen(cmds, stdout=subprocess.PIPE)
		
	for line in process.stdout:
		stuff = line.split()
		print "Using MMap | File size:" + stuff[0] + " | Completion time:" + stuff[1] + "                    " + cmd

print "\nThreaded:"

numthreads = ['1', '2', '4', '8', '16']
for file in files:
	for num in numthreads:
		cmd = './doit ./proj4 testfiles/' + file + ' z p' + num + ' -s'
		cmds = cmd.split()
		process = subprocess.Popen(cmds, stdout=subprocess.PIPE)
		
		for line in process.stdout:
			stuff = line.split()
			print "Num Threads: " + num + " | File size:" + stuff[0] + " | Completion time:" + stuff[1] + "                    " + cmd


